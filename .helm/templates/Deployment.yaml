apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-front-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 2;
    error_log /dev/stderr;
    events {
      worker_connections 1024;
    }
    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      set_real_ip_from  10.0.0.0/8;
      set_real_ip_from  172.0.0.0/8;
      set_real_ip_from  192.168.0.0/16;
      real_ip_header X-Real-IP;
      real_ip_recursive on;
      log_format combined_plus escape=json '{"time_local": "$time_local", '
                                          '"remote_addr": "$remote_addr", '
                                          '"remote_user": "$remote_user", '
                                          '"request": "$request", '
                                          '"status": "$status", '
                                          '"body_bytes_sent": "$body_bytes_sent", '
                                          '"request_time": "$request_time", '
                                          '"http_referrer": "$http_referer", '
                                          '"http_user_agent": "$http_user_agent"}';
      server {
        listen 80;

        location / {
          root /usr/share/nginx/html;
          index index.html;
          try_files  $uri $uri/ /index.html;
          gzip_static on;
        }

        error_page   500 502 503 504  /50x.html;
        gzip on;
        gzip_http_version 1.1;
        gzip_disable      "msie6";
        gzip_min_length   1100;
        gzip_vary         on;
        gzip_proxied      expired no-cache no-store private auth;
        gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_comp_level   9;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-docs
  labels:
    app: {{ .Chart.Name }}-docs
spec:
  replicas: 1
  selector:
      matchLabels:
        app: {{ .Chart.Name }}-docs
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-docs
    spec:
      containers:
      - name: {{ .Chart.Name }}-docs
        image: '{{ index .Values.werf.image "nestcord-docs" }}'
        volumeMounts:
        - name: config-files
          subPath: nginx.conf
          mountPath: /etc/nginx/nginx.conf
      volumes:
      - name: config-files
        configMap:
          name: {{ .Chart.Name }}-front-nginx-conf