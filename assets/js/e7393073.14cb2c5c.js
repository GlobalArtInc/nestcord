"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[140],{6655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=n(6106),a=n(8123);const s={id:"modals",title:"Modals",sidebar_position:4},r=void 0,i={id:"interactions/modals",title:"Modals",description:"With modals you can create pop-up forms that allow users to provide you with formatted inputs through submissions. We'll cover how to create, show, and receive modal forms using nestcord",source:"@site/content/interactions/modals.md",sourceDirName:"interactions",slug:"/interactions/modals",permalink:"/interactions/modals",draft:!1,unlisted:!1,editUrl:"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/interactions/modals.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"modals",title:"Modals",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Message Components",permalink:"/interactions/message-components"},next:{title:"Text Commands",permalink:"/text-commands"}},l={},c=[{value:"Dynamic Modal",id:"dynamic-modal",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"With modals you can create pop-up forms that allow users to provide you with formatted inputs through submissions. We'll cover how to create, show, and receive modal forms using nestcord"}),"\n",(0,o.jsx)("img",{src:"/img/content/modal.png",alt:"Modal",width:"500"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.modals.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, Modal, ModalContext } from '@globalart/nestcord';\n\n@Injectable()\nexport class AppModals {\n    @Modal('pizza')\n    public onModal(@Ctx() [interaction]: ModalContext) {\n      return interaction.reply({\n        content: `Your fav pizza : ${interaction.fields.getTextInputValue('pizza')}`\n      });\n    }\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"dynamic-modal",children:"Dynamic Modal"}),"\n",(0,o.jsxs)(t.p,{children:["You can create modals with dynamic ",(0,o.jsx)(t.code,{children:"id"})," field. This is useful for passing metadata to modals."]}),"\n",(0,o.jsxs)(t.p,{children:["Dynamic modals uses ",(0,o.jsx)(t.a,{href:"https://www.npmjs.com/package/path-to-regexp",children:"path-to-regexp"})," format to perform regexp matching. Turn a path string such as ",(0,o.jsx)(t.code,{children:"user/:name"})," into a regular expression."]}),"\n",(0,o.jsx)(t.p,{children:"To create a Dynamic modal"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:"new ModalBuilder()\n  .setTitle('What your fav pizza?')\n  .setCustomId('pizza/12345')\n  .setComponents([\n    new ActionRowBuilder<ModalActionRowComponentBuilder>().addComponents([\n      new TextInputBuilder()\n        .setCustomId('pizza')\n        .setLabel('???')\n        .setStyle(TextInputStyle.Paragraph)\n    ])\n  ])\n"})}),"\n",(0,o.jsx)(t.p,{children:"To receive a Dynamic modal"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",metastring:'title="src/app.modals.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, Modal, ModalContext,ModalParam } from '@globalart/nestcord';\n\n@Injectable()\nexport class AppModals {\n    @Modal('pizza/:value')\n    public onModal(@Ctx() [interaction]: ModalContext, @ModalParam('value') value: string) {\n      return interaction.reply({\n        content: `Your fav pizza ${value} : ${interaction.fields.getTextInputValue('pizza')}`\n      });\n    }\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8123:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(7378);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);