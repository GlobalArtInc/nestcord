"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[399],{5688:(e,n,a)=>{a.d(n,{A:()=>w});var t=a(3917),r=a(3372),s=a(604),i=a(482),o=a(1949),l=a(7481),c=a(1526),d=a(3036);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:a}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:a,default:t}})=>({value:e,label:n,attributes:a,default:t}))}(a);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,a])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const a=(0,i.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})},[r,a])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,s=p(e),[i,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=n.find(e=>e.default)??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s})),[c,u]=m({queryString:a,groupId:r}),[f,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[a,r]=(0,d.Dv)(n);return[a,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),v=(()=>{const e=c??f;return h({value:e,tabValues:s})?e:null})();(0,o.A)(()=>{v&&l(v)},[v]);return{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)},[u,b,s]),tabValues:s}}var b=a(6383);const v={tabList:"tabList_bpzH",tabItem:"tabItem_MTBi"};var g=a(1273);function x({className:e,block:n,selectedValue:a,selectValue:t,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const n=e.currentTarget,r=o.indexOf(n),s=i[r].value;s!==a&&(l(n),t(s))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:t})=>(0,g.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...t,className:(0,r.A)("tabs__item",v.tabItem,t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:a}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function y(e){const n=f(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(x,{...n,...e}),(0,g.jsx)(j,{...n,...e})]})}function w(e){const n=(0,b.A)();return(0,g.jsx)(y,{...e,children:u(e.children)},String(n))}},6719:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(3917);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},8452:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"techniques/validation","title":"Validation","description":"The ValidationPipe is a built-in pipe that can be used to validate data coming from the client. It uses class-validator package under the hood. The ValidationPipe provides a convenient approach to enforce validation rules for all incoming client payloads, where the specific rules are declared with simple annotations in DTO declarations in each module.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/techniques/validation.mdx","sourceDirName":"techniques","slug":"/techniques/validation","permalink":"/de/techniques/validation","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/techniques/validation.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"validation","title":"Validation","sidebar_position":0},"sidebar":"docsSidebar","previous":{"title":"Lavalink","permalink":"/de/packages/lavalink"},"next":{"title":"Sharding","permalink":"/de/techniques/sharding"}}');var r=a(1273),s=a(6719),i=a(5688),o=a(8517);const l={id:"validation",title:"Validation",sidebar_position:0},c=void 0,d={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ValidationPipe"})," is a built-in pipe that can be used to validate data coming from the client. It uses ",(0,r.jsx)(n.a,{href:"https://github.com/typestack/class-validator",children:"class-validator"})," package under the hood. The ",(0,r.jsx)(n.code,{children:"ValidationPipe"})," provides a convenient approach to enforce validation rules for all incoming client payloads, where the specific rules are declared with simple annotations in DTO declarations in each module."]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(i.A,{groupId:"npm2yarn",children:[(0,r.jsx)(o.A,{value:"npm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ npm install class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ yarn add class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"pnpm",label:"pnpm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ pnpm add class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"bun",label:"Bun",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ bun add class-validator class-transformer\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["Now we can add a few validation rules in our ",(0,r.jsx)(n.code,{children:"CreateUserDto"}),". We do this using decorators provided by the class-validator package, described in detail ",(0,r.jsx)(n.a,{href:"https://github.com/typestack/class-validator#validation-decorators",children:"here"}),". In this fashion, any route that uses the ",(0,r.jsx)(n.code,{children:"CreateUserDto"})," will automatically enforce these validation rules."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="src/users/dto/create-user.dto.ts"',children:"import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\n\nexport class CreateUserDto {\n    @StringOption({\n        name: 'name',\n        description: 'Your name',\n        required: true\n    })\n    name: string;\n\n    @IsEmail()\n    @StringOption({\n        name: 'text',\n        description: 'Your email',\n        required: false\n    })\n    email: string;\n}\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.p,{children:["Also you can use ",(0,r.jsx)(n.code,{children:"ValidationPipe"})," for transforming and validating the payload of a request."]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.nestjs.com/techniques/validation#transform-payload-objects",children:"Read more about transforming"})})]}),"\n",(0,r.jsxs)(n.p,{children:["Now, we can use the ",(0,r.jsx)(n.code,{children:"ValidationPipe"})," in our ",(0,r.jsx)(n.code,{children:"UsersCommands"})," to enforce the validation rules we just defined."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="src/users/users.commands.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, SlashCommand, SlashCommandContext } from '@globalart/nestcord';\n\n@Injectable()\nexport class UsersCommands {\n    @SlashCommand({\n        name: 'create',\n        description: 'Create a new user'\n    })\n    public async onCreateUser(\n        @Context() [interaction]: SlashCommandContext,\n        @Options(new ValidationPipe({ validateCustomDecorators: true })) createUserDto: CreateUserDto\n    ) {\n        return interaction.reply({ content: `User created: ${createUserDto.name}` });\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now, if we try to use the ",(0,r.jsx)(n.code,{children:"create"})," command without providing a name or email, we will get an error message."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'{"statusCode":400,"message":["email should not be empty"],"error":"Bad Request"}\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can create snippet for validated options decorator:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'title="src/decorators/validated-options.decorator.ts"',children:"import { ValidationPipe, PipeTransform } from '@nestjs/common';\n\nexport const ValidatedOptions = (...dataOrPipes: PipeTransform[] | string) => {\n    return Options(...dataOrPipes, new ValidationPipe());\n};\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"You can create filters to handle and response validation errors."}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.nestjs.com/exception-filters#exception-filters",children:"See Exception Filters for more information"})})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8517:(e,n,a)=>{a.d(n,{A:()=>i});a(3917);var t=a(3372);const r={tabItem:"tabItem_HuSU"};var s=a(1273);function i({children:e,hidden:n,className:a}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,a),hidden:n,children:e})}}}]);