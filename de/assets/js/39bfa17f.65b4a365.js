"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[982],{1134:(n,e,o)=>{o.d(e,{R:()=>s,x:()=>c});var t=o(3917);const r={},i=t.createContext(r);function s(n){const e=t.useContext(i);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(i.Provider,{value:e},n.children)}},5855:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"techniques/proxy-integration","title":"Proxy Integration","description":"NestCord supports proxy configuration for all connections to the Discord API. This is useful for deployments in corporate networks or when using VPNs.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/techniques/proxy-integration.mdx","sourceDirName":"techniques","slug":"/techniques/proxy-integration","permalink":"/de/techniques/proxy-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/techniques/proxy-integration.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"proxy-integration","title":"Proxy Integration","sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Client Providers","permalink":"/de/techniques/client-providers"},"next":{"title":"Contribution Guide","permalink":"/de/contributing/contribution-guide"}}');var r=o(1273),i=o(1134);const s={id:"proxy-integration",title:"Proxy Integration",sidebar_position:6},c=void 0,l={},a=[{value:"Proxy Configuration Methods",id:"proxy-configuration-methods",level:2},{value:"1. Simple configuration using proxyPath",id:"1-simple-configuration-using-proxypath",level:3},{value:"2. Advanced configuration using proxy object",id:"2-advanced-configuration-using-proxy-object",level:3},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"proxyPath",id:"proxypath",level:3},{value:"proxy",id:"proxy",level:3},{value:"NestCordProxyOptions",id:"nestcordproxyoptions",level:4},{value:"How It Works",id:"how-it-works",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Corporate Network",id:"corporate-network",level:3},{value:"Proxy with Authentication",id:"proxy-with-authentication",level:3},{value:"SOCKS5 Proxy",id:"socks5-proxy",level:3},{value:"Getting Proxy Information",id:"getting-proxy-information",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Notes",id:"notes",level:2}];function d(n){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"NestCord supports proxy configuration for all connections to the Discord API. This is useful for deployments in corporate networks or when using VPNs."}),"\n",(0,r.jsx)(e.h2,{id:"proxy-configuration-methods",children:"Proxy Configuration Methods"}),"\n",(0,r.jsx)(e.h3,{id:"1-simple-configuration-using-proxypath",children:"1. Simple configuration using proxyPath"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"import { NestCordModule } from '@globalart/nestcord';\nimport { GatewayIntentBits } from 'discord.js';\n\n@Module({\n  imports: [\n    NestCordModule.forRoot({\n      token: process.env.DISCORD_TOKEN,\n      intents: [GatewayIntentBits.Guilds],\n      proxyPath: 'http://proxy.company.com:8080',\n    }),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"2-advanced-configuration-using-proxy-object",children:"2. Advanced configuration using proxy object"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"@Module({\n  imports: [\n    NestCordModule.forRoot({\n      token: process.env.DISCORD_TOKEN,\n      intents: [GatewayIntentBits.Guilds],\n      proxy: {\n        host: 'proxy.company.com',\n        port: 8080,\n        protocol: 'http',\n        auth: {\n          username: 'user',\n          password: 'password',\n        },\n      },\n    }),\n  ],\n})\nexport class AppModule {}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"configuration-parameters",children:"Configuration Parameters"}),"\n",(0,r.jsx)(e.h3,{id:"proxypath",children:"proxyPath"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Type"}),": ",(0,r.jsx)(e.code,{children:"string"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Description"}),": Full URL of the proxy server"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Examples"}),":","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"'http://proxy.company.com:8080'"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"'https://user:pass@proxy.company.com:8080'"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"'socks5://proxy.company.com:1080'"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"proxy",children:"proxy"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Type"}),": ",(0,r.jsx)(e.code,{children:"NestCordProxyOptions"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Description"}),": Object with detailed proxy settings"]}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"nestcordproxyoptions",children:"NestCordProxyOptions"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"interface NestCordProxyOptions {\n  host: string;                    \n  port: number;                    \n  protocol?: 'http' | 'https';     \n  auth?: {                         \n    username: string;\n    password: string;\n  };\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Environment Variables"}),": When initializing the module, ",(0,r.jsx)(e.code,{children:"HTTP_PROXY"})," and ",(0,r.jsx)(e.code,{children:"HTTPS_PROXY"})," variables are automatically set"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Discord.js Client"}),": All connections to Discord API will go through the specified proxy"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"NestCordService"}),": REST API requests will also use proxy settings"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,r.jsx)(e.h3,{id:"corporate-network",children:"Corporate Network"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"NestCordModule.forRoot({\n  token: process.env.DISCORD_TOKEN,\n  intents: [GatewayIntentBits.Guilds],\n  proxyPath: 'http://corporate-proxy.company.com:8080',\n})\n"})}),"\n",(0,r.jsx)(e.h3,{id:"proxy-with-authentication",children:"Proxy with Authentication"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"NestCordModule.forRoot({\n  token: process.env.DISCORD_TOKEN,\n  intents: [GatewayIntentBits.Guilds],\n  proxy: {\n    host: 'secure-proxy.company.com',\n    port: 8080,\n    protocol: 'https',\n    auth: {\n      username: process.env.PROXY_USER,\n      password: process.env.PROXY_PASS,\n    },\n  },\n})\n"})}),"\n",(0,r.jsx)(e.h3,{id:"socks5-proxy",children:"SOCKS5 Proxy"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/app.module.ts"',children:"NestCordModule.forRoot({\n  token: process.env.DISCORD_TOKEN,\n  intents: [GatewayIntentBits.Guilds],\n  proxyPath: 'socks5://proxy.company.com:1080',\n})\n"})}),"\n",(0,r.jsx)(e.h2,{id:"getting-proxy-information",children:"Getting Proxy Information"}),"\n",(0,r.jsx)(e.p,{children:"You can get the current proxy configuration through NestCordService:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",metastring:'title="src/my.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { NestCordService } from '@globalart/nestcord';\n\n@Injectable()\nexport class MyService {\n  constructor(private readonly nestcord: NestCordService) {}\n\n  getProxyInfo() {\n    const proxyConfig = this.nestcord.getProxyConfig();\n    console.log('Current proxy config:', proxyConfig);\n  }\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsx)(e.p,{children:"When configuring the proxy, corresponding messages will be displayed in the logs:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"[NestCordService] Proxy path configured: http://proxy.company.com:8080\n[NestCordService] Proxy configured: http://proxy.company.com:8080\n"})}),"\n",(0,r.jsx)(e.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Proxy settings are applied globally for the entire application"}),"\n",(0,r.jsx)(e.li,{children:"HTTP, HTTPS, and SOCKS5 proxies are supported"}),"\n",(0,r.jsx)(e.li,{children:"If proxy configuration fails, the application will continue to work without a proxy"}),"\n",(0,r.jsx)(e.li,{children:"Proxy settings affect all Discord.js connections, including WebSocket and REST API"}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);