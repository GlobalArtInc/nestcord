"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[462],{528:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(3917),a=t(3372),s=t(8567),i=t(8240),l=t(482),c=t(1469),d=t(7565),o=t(8834),h=t(4723);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,o.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function j({queryString:e=!1,groupId:n}){const t=(0,l.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(a),(0,r.useCallback)(e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})},[a,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[i,l]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[d,o]=j({queryString:t,groupId:a}),[u,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,h.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&a.set(e)},[n,a])]}({groupId:a}),v=(()=>{const e=d??u;return x({value:e,tabValues:s})?e:null})();(0,c.A)(()=>{v&&l(v)},[v]);return{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!x({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),o(e),m(e)},[o,m,s]),tabValues:s}}var v=t(5727);const g={tabList:"tabList_LgzA",tabItem:"tabItem_FPyp"};var f=t(1273);function y({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,a=l.indexOf(n),i=s[a].value;i!==t&&(c(n),r(i))},o=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:r})=>(0,f.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:o,onClick:d,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function k(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,a.A)(s.G.tabs.container,"tabs-container",g.tabList),children:[(0,f.jsx)(y,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function w(e){const n=(0,v.A)();return(0,f.jsx)(k,{...e,children:u(e.children)},String(n))}},957:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"packages/lavalink","title":"Lavalink","description":"Transform your bot into a professional DJ with the power of the Lavalink ecosystem. This package uses lavalink-client behind the scenes, providing a high-performance and efficient solution for managing audio streams on Discord. By leveraging Lavalink, your bot gains the ability to manage audio playback, queues, and real-time controls with minimal latency, transforming it into a fully capable and professional music system.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/packages/lavalink.mdx","sourceDirName":"packages","slug":"/packages/lavalink","permalink":"/de/packages/lavalink","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/packages/lavalink.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"lavalink","title":"Lavalink","sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Stat Reporter","permalink":"/de/packages/stat-reporter"},"next":{"title":"Validation","permalink":"/de/techniques/validation"}}');var a=t(1273),s=t(4655),i=t(528),l=t(3901);const c={id:"lavalink",title:"Lavalink",sidebar_position:3},d=void 0,o={},h=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Listeners",id:"listeners",level:2},{value:"LavalinkManager Events",id:"lavalinkmanager-events",level:3},{value:"SponsorBlock Plugin Events",id:"sponsorblock-plugin-events",level:4},{value:"LavaLyrics Plugin Events",id:"lavalyrics-plugin-events",level:4},{value:"NodeManager Events",id:"nodemanager-events",level:3},{value:"Providers",id:"providers",level:2},{value:"Play Tracks",id:"play-tracks",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Transform your bot into a professional DJ with the power of the ",(0,a.jsx)(n.a,{href:"https://lavalink.dev/",children:"Lavalink"})," ecosystem. This package uses ",(0,a.jsx)(n.a,{href:"https://github.com/Tomato6966/lavalink-client",children:"lavalink-client"})," behind the scenes, providing a high-performance and efficient solution for managing audio streams on Discord. By leveraging Lavalink, your bot gains the ability to manage audio playback, queues, and real-time controls with minimal latency, transforming it into a fully capable and professional music system."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(i.A,{groupId:"npm2yarn",children:[(0,a.jsx)(l.A,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm i lavalink-client\n"})})}),(0,a.jsx)(l.A,{value:"yarn",label:"Yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add lavalink-client\n"})})}),(0,a.jsx)(l.A,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add lavalink-client\n"})})}),(0,a.jsx)(l.A,{value:"bun",label:"Bun",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"bun add lavalink-client\n"})})})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://lavalink.dev/getting-started/index.html",children:"Lavalink Installation Guide"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(n.p,{children:["Once the installation process is complete, we can import the ",(0,a.jsx)(n.code,{children:"NestCordLavalinkModule"})," with your ",(0,a.jsx)(n.code,{children:"NestCordModule"})," into the root ",(0,a.jsx)(n.code,{children:"AppModule"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.module.ts"',children:"import { NestCordLavalinkModule } from '@globalart/nestcord';\nimport { Module } from '@nestjs/common';\nimport { Client } from 'discord.js';\nimport { AppService } from './app.service';\n\n@Module({\n    imports: [\n        NestCordModule.forRoot({\n            token: process.env.DISCORD_TOKEN,\n            intents: [\n                IntentsBitField.Flags.Guilds,\n                IntentsBitField.Flags.GuildVoiceStates\n            ],\n        }),\n        NestCordLavalinkModule.forRoot({\n            // At least 1 node is required\n            nodes: [\n                {\n                    authorization: 'youshallnotpass',\n                    host: '127.0.0.1',\n                    port: 2333,\n                }\n            ]\n        })\n    ],\n    providers: [AppService]\n})\nexport class AppModule {}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Checkout more Module options in the official ",(0,a.jsxs)(n.a,{href:"https://lc4.gitbook.io/lavalink-client/docs/lavalinkmanager/manager-options",children:[(0,a.jsx)(n.strong,{children:"lavalink-client"})," Documentation"]}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"listeners",children:"Listeners"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.service.ts"',children:"import { Injectable, Logger } from '@nestjs/common';\nimport { Context, OnLavalinkManager, OnNodeManager, LavalinkManagerContextOf, NodeManagerContextOf } from '@globalart/nestcord';\n\n@Injectable()\nexport class AppService {\n    private readonly logger = new Logger(AppService.name);\n\n    @OnNodeManager('connect')\n    public onConnect(@Context() [node]: NodeManagerContextOf<'connect'>) {\n        this.logger.log(`Node: ${node.options.id} Connected`);\n    }\n\n    @OnLavalinkManager('playerCreate')\n    public onPlayerCreate(@Context() [player]: LavalinkManagerContextOf<'playerCreate'>) {\n        this.logger.log(`Player created at ${player.guildId}`);\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"lavalinkmanager-events",children:"LavalinkManager Events"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["View in Official ",(0,a.jsxs)(n.a,{href:"https://tomato6966.github.io/lavalink-client/extra/manager-events/",children:[(0,a.jsx)(n.strong,{children:"lavalink-client"})," Documentation"]}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Event Name"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"trackStart"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Track plays."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"trackEnd"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a track finished playing."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"trackStuck"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Track got stuck while playing."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"trackError"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Track errored."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"queueEnd"})}),(0,a.jsxs)(n.td,{children:["Emitted when the track Ended, but there are no more tracks in the queue. (",(0,a.jsx)(n.code,{children:"trackEnd"}),", does NOT get executed)"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerCreate"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Player gets created."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerMove"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Player gets moved between Voice Channels."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerDisconnect"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a player is disconnected from a channel."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerSocketClose"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node-Socket got closed for a specific Player."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerDestroy"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Player got destroyed."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerUpdate"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Player gets an update from Lavalink's playerUpdate Event."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerMuteChange"})}),(0,a.jsx)(n.td,{children:"Emitted whenever Player's voice state related to muting is changed."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerDeafChange"})}),(0,a.jsx)(n.td,{children:"Emitted whenever Player's voice state related to deafing is changed."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerSuppressChange"})}),(0,a.jsx)(n.td,{children:"Emitted whenever Player's voice state related to supressing is changed."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerQueueEmptyStart"})}),(0,a.jsx)(n.td,{children:"Emitted whenever the Queue empty handler started (timeout)."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerQueueEmptyEnd"})}),(0,a.jsx)(n.td,{children:"Emitted whenever the Queue empty handler finished (successfully) and destroyed the player."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerQueueEmptyCancel"})}),(0,a.jsx)(n.td,{children:"Emitted whenever the Queue empty handler cancelled (e.g. because a new track got added)."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerVoiceJoin"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a user joins the player's voice channel."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"playerVoiceLeave"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a user leaves the player's voice channel."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"debug"})}),(0,a.jsxs)(n.td,{children:["Emitted for several erros, and logs within lavalink-client, if ",(0,a.jsx)(n.code,{children:"managerOptions.advancedOptions.enableDebugEvents"})," is ",(0,a.jsx)(n.code,{children:"true"}),"."]})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"sponsorblock-plugin-events",children:"SponsorBlock Plugin Events"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["This Events is a part of ",(0,a.jsx)(n.a,{href:"#lavalinkmanager-events",children:"LavalinkManager Events"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["This requires the ",(0,a.jsx)(n.a,{href:"https://github.com/topi314/Sponsorblock-Plugin",children:(0,a.jsx)(n.strong,{children:"SponsorBlock Plugin"})})," added in Lavalink Server."]}),"\n"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Event Name"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"SegmentsLoaded"})}),(0,a.jsx)(n.td,{children:"Emitted whenever Segments are loaded."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"SegmentSkipped"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a specific Segment was skipped."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"ChapterStarted"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a specific Chapter starts playing."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"ChaptersLoaded"})}),(0,a.jsx)(n.td,{children:"Emitted whenever Chapters are loaded."})]})]})]}),"\n",(0,a.jsx)(n.h4,{id:"lavalyrics-plugin-events",children:"LavaLyrics Plugin Events"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["This Events is a part of ",(0,a.jsx)(n.a,{href:"#lavalinkmanager-events",children:"LavalinkManager Events"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["This requires the ",(0,a.jsx)(n.a,{href:"https://github.com/topi314/LavaLyrics",children:(0,a.jsx)(n.strong,{children:"LavaLyrics Plugin"})})," added in Lavalink Server."]}),"\n"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Event Name"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"LyricsLine"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Lyrics line is received."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"LyricsFound"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Lyrics is found."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"LyricsNotFound"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Lyrics is not found."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"nodemanager-events",children:"NodeManager Events"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["View in Official ",(0,a.jsxs)(n.a,{href:"https://tomato6966.github.io/lavalink-client/extra/node-events/",children:[(0,a.jsx)(n.strong,{children:"lavalink-client"})," Documentation"]}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Event Name"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"create"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is created."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"destroy"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is destroyed."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"connect"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is connected."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"reconnecting"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is reconnecting."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"reconnectinprogress"})}),(0,a.jsxs)(n.td,{children:["Emitted whenever a node starts to reconnect. (if you have a reconnection delay, the reconnecting event will be emitted after the ",(0,a.jsx)(n.code,{children:"retryDelay"}),".) Useful to check wether the internal node reconnect system works or not."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"disconnect"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is disconnects."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"error"})}),(0,a.jsx)(n.td,{children:"Emitted whenever a Node is error."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"raw"})}),(0,a.jsx)(n.td,{children:"Emits every single Node event."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"providers",children:"Providers"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { LavalinkManager, NodeManager } from 'lavalink-client';\n\n@Injectable()\nexport class AppService {\n    public constructor(\n        private readonly lavalinkManager: LavalinkManager,\n        private readonly nodeManager: NodeManager,\n    ) {}\n}\n"})}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Class (Type to be injected)"}),(0,a.jsx)(n.th,{children:"Manager Property (Will access to)"}),(0,a.jsx)(n.th,{children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"LavalinkManager"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"lavalinkManager"})}),(0,a.jsx)(n.td,{children:"Lavalink Manager"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"NodeManager"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"lavalinkManager.nodeManager"})}),(0,a.jsx)(n.td,{children:"Node Manager"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"PlayerManager"})}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"lavalinkManager (player functions)"})}),(0,a.jsx)(n.td,{children:"Player Manager"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"play-tracks",children:"Play Tracks"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="app.commands.ts"',children:"import { Injectable, UseInterceptors } from '@nestjs/common';\nimport { NestCordLavalinkService, PlayerManager } from 'lavalink-client';\nimport { Context, Options, SlashCommand, SlashCommandContext } from '@globalart/nestcord';\nimport { QueryDto } from './query.dto';\nimport { SourceAutocompleteInterceptor } from 'source.autocomplete';\n\n@Injectable()\nexport class AppCommands {\n    public constructor(\n        private readonly playerManager: PlayerManager,\n        private readonly lavalinkService: NestCordLavalinkService\n    ) {}\n\n    @UseInterceptors(SourceAutocompleteInterceptor)\n    @SlashCommand({\n        name: 'play',\n        description: 'play a track',\n    })\n    public async onPlay(\n        @Context() [interaction]: SlashCommandContext,\n        @Options() { query, source }: QueryDto,\n    ) {\n        const player =\n            this.playerManager.get(interaction.guild.id) ??\n            this.playerManager.create({\n                ...this.lavalinkService.extractInfoForPlayer(interaction),\n                // optional configurations:\n                selfDeaf: true,\n                selfMute: false,\n                volume: 100,\n            });\n\n        await player.connect();\n\n        const res = await player.search(\n            {\n                query,\n                source: source ?? 'soundcloud'\n            },\n            interaction.user.id,\n        );\n\n        await player.queue.add(res.tracks[0]);\n        if (!player.playing) await player.play();\n\n        // It's extremely recommended to use `trackStart` event for this announcement\n        return interaction.reply({\n            content: `Now playing ${res.tracks[0].info.title}`,\n        });\n    }\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="query.dto.ts"',children:"import { SearchPlatform } from 'lavalink-client';\nimport { StringOption } from '@globalart/nestcord';\n\nexport class QueryDto {\n    @StringOption({\n        name: 'query',\n        description: '<name | url> of the requested track'\n        required: true\n    })\n    public readonly query!: string;\n\n    @StringOption({\n        name: 'source',\n        description: 'source of the track',\n        autocomplete: true,\n        required: false,\n    })\n    public readonly source?: SourcePlatform;\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="source.autocomplete.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { AutocompleteInteraction } from 'discord.js';\nimport { DefaultSources } from 'lavalink-client';\nimport { AutocompleteInterceptor } from '@globalart/nestcord';\n\n@Injectable()\nexport class SourceAutocompleteInterceptor extends AutocompleteInterceptor {\n    public transformOptions(interaction: AutocompleteInteraction) {\n        const focused = interaction.options.getFocused(true);\n        let choices: string[];\n\n        if (focused.name === 'source') {\n            choices = [DefaultSources.soundcloud] // Note that some Sources needs extra plugins/configuration to property work\n        }\n\n        return interaction.respond(\n        choices\n            .filter((choice) => choice.startsWith(focused.value.toString()))\n            .map((choice) => ({ name: choice, value: choice })),\n        );\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},3901:(e,n,t)=>{t.d(n,{A:()=>i});t(3917);var r=t(3372);const a={tabItem:"tabItem_Fe41"};var s=t(1273);function i({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:e})}},4655:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(3917);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);