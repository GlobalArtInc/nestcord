"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[213],{2722:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"interactions/context-menus","title":"Context Menus","description":"User commands and message commands are now live! These commands appear on context menus for users and messages, with more to come in the future.","source":"@site/i18n/de/docusaurus-plugin-content-docs/current/interactions/context-menus.mdx","sourceDirName":"interactions","slug":"/interactions/context-menus","permalink":"/de/interactions/context-menus","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/interactions/context-menus.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"context-menus","title":"Context Menus","sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Slash Commands","permalink":"/de/interactions/slash-commands"},"next":{"title":"Message Components","permalink":"/de/interactions/message-components"}}');var o=s(7711),a=s(6117);const r={id:"context-menus",title:"Context Menus",sidebar_position:2},c=void 0,m={},i=[{value:"User Commands",id:"user-commands",level:2},{value:"Message Commands",id:"message-commands",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"User commands"})," and ",(0,o.jsx)(n.strong,{children:"message commands"})," are now live! These commands appear on context menus for users and messages, with more to come in the future."]}),"\n",(0,o.jsx)(n.h2,{id:"user-commands",children:"User Commands"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"User commands"})," are application commands that appear on the context menu (right click or tap) of users. They're a great way to surface quick actions for your app that target users."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",metastring:'title="src/app.commands.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, UserCommand, UserCommandContext, TargetUser } from '@globalart/nestcord';\nimport { User } from 'discord.js';\n\n@Injectable()\nexport class AppCommands {\n    @UserCommand({ name: 'Get avatar' })\n    public async getUserAvatar(\n        @Context() [interaction]: UserCommandContext,\n        @TargetUser() user: User\n    ) {\n        return interaction.reply({\n            embeds: [\n                new MessageEmbed()\n                    .setTitle(`Avatar ${user.username}`)\n                    .setImage(user.displayAvatarURL({ size: 4096, dynamic: true }))\n            ]\n        });\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"message-commands",children:"Message Commands"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Message commands"})," are application commands that appear on the context menu (right click or tap) of messages. They're a great way to surface quick actions for your app that target messages."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",metastring:'title="src/app.commands.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, MessageCommand, MessageCommandContext, TargetMessage } from '@globalart/nestcord';\nimport { Message } from 'discord.js';\n\n@Injectable()\nexport class AppCommands {\n    @MessageCommand({ name: 'Copy Message' })\n    public async copyMessage(\n        @Context() [interaction]: MessageCommandContext,\n        @TargetMessage() message: Message\n    ) {\n        return interaction.reply({ content: message.content });\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},6117:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(3303);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);