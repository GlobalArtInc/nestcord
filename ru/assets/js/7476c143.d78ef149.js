"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[714],{1285:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var t=n(3303);const r={},s=t.createContext(r);function i(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:a},e.children)}},3206:(e,a,n)=>{n.d(a,{A:()=>i});n(3303);var t=n(3372);const r={tabItem:"tabItem_kQpg"};var s=n(7711);function i({children:e,hidden:a,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,n),hidden:a,children:e})}},3507:(e,a,n)=>{n.d(a,{A:()=>I});var t=n(3303),r=n(3372),s=n(9986),i=n(2081),o=n(8368),l=n(7431),c=n(9994),d=n(1523),u=n(9353);function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:a,children:n}=e;return(0,t.useMemo)(()=>{const e=a??function(e){return p(e).map(({props:{value:e,label:a,attributes:n,default:t}})=>({value:e,label:a,attributes:n,default:t}))}(n);return function(e){const a=(0,d.XI)(e,(e,a)=>e.value===a.value);if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,n])}function m({value:e,tabValues:a}){return a.some(a=>a.value===e)}function f({queryString:e=!1,groupId:a}){const n=(0,o.W6)(),r=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,c.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const a=new URLSearchParams(n.location.search);a.set(r,e),n.replace({...n.location,search:a.toString()})},[r,n])]}function b(e){const{defaultValue:a,queryString:n=!1,groupId:r}=e,s=h(e),[i,o]=(0,t.useState)(()=>function({defaultValue:e,tabValues:a}){if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find(e=>e.default)??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:s})),[c,d]=f({queryString:n,groupId:r}),[p,b]=function({groupId:e}){const a=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,u.Dv)(a);return[n,(0,t.useCallback)(e=>{a&&r.set(e)},[a,r])]}({groupId:r}),v=(()=>{const e=c??p;return m({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{v&&o(v)},[v]);return{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)},[d,b,s]),tabValues:s}}var v=n(7237);const g={tabList:"tabList_k2ZS",tabItem:"tabItem_uetZ"};var x=n(7711);function j({className:e,block:a,selectedValue:n,selectValue:t,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const a=e.currentTarget,r=o.indexOf(a),i=s[r].value;i!==n&&(l(a),t(i))},d=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;a=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;a=o[n]??o[o.length-1];break}}a?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},e),children:s.map(({value:e,label:a,attributes:t})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...t,className:(0,r.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":n===e}),children:a??e},e))})}function y({lazy:e,children:a,selectedValue:n}){const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===n);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==n}))})}function w(e){const a=b(e);return(0,x.jsxs)("div",{className:(0,r.A)(s.G.tabs.container,"tabs-container",g.tabList),children:[(0,x.jsx)(j,{...a,...e}),(0,x.jsx)(y,{...a,...e})]})}function I(e){const a=(0,v.A)();return(0,x.jsx)(w,{...e,children:p(e.children)},String(a))}},7021:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"techniques/validation","title":"Validation","description":"The ValidationPipe is a built-in pipe that can be used to validate data coming from the client. It uses class-validator package under the hood. The ValidationPipe provides a convenient approach to enforce validation rules for all incoming client payloads, where the specific rules are declared with simple annotations in DTO declarations in each module.","source":"@site/i18n/ru/docusaurus-plugin-content-docs/current/techniques/validation.mdx","sourceDirName":"techniques","slug":"/techniques/validation","permalink":"/ru/techniques/validation","draft":false,"unlisted":false,"editUrl":"https://github.com/GlobalArtInc/nestcord/tree/master/docs/content/techniques/validation.mdx","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"id":"validation","title":"Validation","sidebar_position":0},"sidebar":"docsSidebar","previous":{"title":"Lavalink","permalink":"/ru/packages/lavalink"},"next":{"title":"Sharding","permalink":"/ru/techniques/sharding"}}');var r=n(7711),s=n(1285),i=n(3507),o=n(3206);const l={id:"validation",title:"Validation",sidebar_position:0},c=void 0,d={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function p(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"ValidationPipe"})," is a built-in pipe that can be used to validate data coming from the client. It uses ",(0,r.jsx)(a.a,{href:"https://github.com/typestack/class-validator",children:"class-validator"})," package under the hood. The ",(0,r.jsx)(a.code,{children:"ValidationPipe"})," provides a convenient approach to enforce validation rules for all incoming client payloads, where the specific rules are declared with simple annotations in DTO declarations in each module."]}),"\n",(0,r.jsx)(a.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(i.A,{groupId:"npm2yarn",children:[(0,r.jsx)(o.A,{value:"npm",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"$ npm install class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"$ yarn add class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"pnpm",label:"pnpm",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"$ pnpm add class-validator class-transformer\n"})})}),(0,r.jsx)(o.A,{value:"bun",label:"Bun",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:"$ bun add class-validator class-transformer\n"})})})]}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(a.p,{children:["Now we can add a few validation rules in our ",(0,r.jsx)(a.code,{children:"CreateUserDto"}),". We do this using decorators provided by the class-validator package, described in detail ",(0,r.jsx)(a.a,{href:"https://github.com/typestack/class-validator#validation-decorators",children:"here"}),". In this fashion, any route that uses the ",(0,r.jsx)(a.code,{children:"CreateUserDto"})," will automatically enforce these validation rules."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",metastring:'title="src/users/dto/create-user.dto.ts"',children:"import { IsNotEmpty, IsString, IsEmail } from 'class-validator';\n\nexport class CreateUserDto {\n    @StringOption({\n        name: 'name',\n        description: 'Your name',\n        required: true\n    })\n    name: string;\n\n    @IsEmail()\n    @StringOption({\n        name: 'text',\n        description: 'Your email',\n        required: false\n    })\n    email: string;\n}\n"})}),"\n",(0,r.jsxs)(a.admonition,{type:"tip",children:[(0,r.jsxs)(a.p,{children:["Also you can use ",(0,r.jsx)(a.code,{children:"ValidationPipe"})," for transforming and validating the payload of a request."]}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://docs.nestjs.com/techniques/validation#transform-payload-objects",children:"Read more about transforming"})})]}),"\n",(0,r.jsxs)(a.p,{children:["Now, we can use the ",(0,r.jsx)(a.code,{children:"ValidationPipe"})," in our ",(0,r.jsx)(a.code,{children:"UsersCommands"})," to enforce the validation rules we just defined."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",metastring:'title="src/users/users.commands.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { Context, SlashCommand, SlashCommandContext } from '@globalart/nestcord';\n\n@Injectable()\nexport class UsersCommands {\n    @SlashCommand({\n        name: 'create',\n        description: 'Create a new user'\n    })\n    public async onCreateUser(\n        @Context() [interaction]: SlashCommandContext,\n        @Options(new ValidationPipe({ validateCustomDecorators: true })) createUserDto: CreateUserDto\n    ) {\n        return interaction.reply({ content: `User created: ${createUserDto.name}` });\n    }\n}\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Now, if we try to use the ",(0,r.jsx)(a.code,{children:"create"})," command without providing a name or email, we will get an error message."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'{"statusCode":400,"message":["email should not be empty"],"error":"Bad Request"}\n'})}),"\n",(0,r.jsx)(a.p,{children:"You can create snippet for validated options decorator:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",metastring:'title="src/decorators/validated-options.decorator.ts"',children:"import { ValidationPipe, PipeTransform } from '@nestjs/common';\n\nexport const ValidatedOptions = (...dataOrPipes: PipeTransform[] | string) => {\n    return Options(...dataOrPipes, new ValidationPipe());\n};\n"})}),"\n",(0,r.jsxs)(a.admonition,{type:"tip",children:[(0,r.jsx)(a.p,{children:"You can create filters to handle and response validation errors."}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://docs.nestjs.com/exception-filters#exception-filters",children:"See Exception Filters for more information"})})]})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);